# Default values for aws_agent_helmchart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Image location for the Spyderbat AWS agent
image:
  registry: public.ecr.aws
  # Full image
  repository: a6j2k0g1/aws-agent
  tag: latest
  pullPolicy: Always
  pullSecrets: []


# Reasonable resource defaults.  May need to be larger for particularly large aws environments
resources:
  requests:
    cpu: 100m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 10240Mi

# Agent aws service collection settings
awsAgentConfig:
  # The spyderbat org id for your organization
  spyderbat_org: your spyderbat org id here
  # The spyderbat api url
  spyderbat_api_url: https://api.prod.spyderbat.com

  # Flow control settings for the aws-agent spyderbat api send queue
  # Nr of messages in queue prior to sending
  send_buffer_size: 50

  # The send buffer max delay if less than send_buffer_size messages
  # are in the queue
  send_buffer_max_delay: 15

  # TODO - Max message size control in the queue (2MByte uncompressed)

  # The log level for the agent
  log_level: INFO

  pollers:
  - service: guardduty
    # Optionally, you can specify which aws role to assume to pull data
    # role_arn: your arn here

    # The polling interval in seconds
    polling_interval: 30
    # The initial lookback in seconds when polling guardduty findings for the first time
    initial_lookback: 86400
    # Which regions to poll, and with what settings. Note you can override the
    # general settings (role_arn, polling_interval and initial_loopback) per region
    # by adding these properties to the region map
    regions:
    - region: us-east-1
    - region: us-east-2
    - region: us-west-2

  - service: ec2tags
    # Optionally, you can specify which aws role to assume to pull data
    # role_arn: your arn here
    polling_interval: 5
    regions:
    - region: us-east-1
    - region: us-east-2
    - region: us-west-1

credentials:
  # Optionally you can specify the aws credentials to use for the agent explicitly here
  # (if you are not using a service account that assumes an IAM role to pull data)
  # we recommend setting these with the --set option during helm install
  aws_access_key_id:
  aws_secret_access_key:

  # The spyderbat api key to use for the agent.
  # This does not need to be set if you store it in AWS secrets manager (see next section)
  # we recommend setting this with the --set option during helm install
  spyderbat_api_key:

awsSecretsManager:
  enabled: false
  secretArn: arn of the secret in secrets manager that has the spyderbat api key

serviceAccount:
  # Set enabled to true if you want to create a service account for the agent and have it assume
  # an AWS role for interacting with AWS (recommended)
  enabled: true

  # Set create to true if you want the helm chart to create the service account for you
  create: true

  # The name of the service account to use (or create)
  name: aws-agent-serviceaccount
  # Use the below annotation for EKS based clusters to associate the service account with an IAM role
  awsRoleAnnotation: eks.amazonaws.com/role-arn
  # Provide the ARN to the role with the appropriate trust policy and
  # permissions to interact with AWS services
  awsRoleArn: arn of the IAM role that the service account should assume
