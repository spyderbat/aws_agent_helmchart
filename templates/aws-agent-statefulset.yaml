apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: aws-agent-statefulset
  namespace: {{ .Release.Namespace }}
  labels:
    app: aws-agent
spec:
  replicas: 1
  serviceName: aws-agent-service
  selector:
    matchLabels:
      app: aws-agent
  template:
    metadata:
      name: aws-agent
      namespace: {{ .Release.Namespace }}
      labels:
        app: aws-agent
    spec:
{{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{ end }}
      containers:
        - name: aws-agent
          image: {{ .Values.image.registry}}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: secrets-volume
              mountPath: /etc/aws-config/secrets
            - name: config-volume
              mountPath: /etc/aws-config
            - name: checkpoint
              mountPath: /opt/spyderbat/aws_agent/checkpoints
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}

      volumes:
        - name: config-volume
          configMap:
            name: aws-agent-configmap
        - name: secrets-volume
{{- if .Values.awsSecretsManager.enabled }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-agent-credentials"
{{- else }}
          secret:
            secretName: aws-agent-secrets
{{- end }}
        - name: checkpoint
          hostPath:
            path: /opt/spyderbat/aws_agent/
            type: DirectoryOrCreate